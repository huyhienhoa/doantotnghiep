<?php

namespace common\models;

use Yii;

/**
 * This is the model class for table "{{%hdgd_tkb_bpcgd}}".
 *
 * @property int $id
 * @property string $name
 * @property int $loaitailieu_id
 *
 * @property Bangphanconggiangday[] $bangphanconggiangdays
 * @property Loaitailieu $loaitailieu
 * @property Hopdonggiangday[] $hopdonggiangdays
 * @property Thoikhoabieu[] $thoikhoabieus
 */
class HdgdTkbBpcgd extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%hdgd_tkb_bpcgd}}';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
//            [['loaitailieu_id'], 'required'],
            [['loaitailieu_id'], 'integer'],
            [['name'], 'string', 'max' => 50],
            [['loaitailieu_id'], 'exist', 'skipOnError' => true, 'targetClass' => Loaitailieu::className(), 'targetAttribute' => ['loaitailieu_id' => 'id']],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'Tên',
            'loaitailieu_id' => 'Loại tài liệu',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBangphanconggiangdays()
    {
        return $this->hasMany(Bangphanconggiangday::className(), ['HDGD_TKB_BPCGD__id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getLoaitailieu()
    {
        return $this->hasOne(Loaitailieu::className(), ['id' => 'loaitailieu_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getHopdonggiangdays()
    {
        return $this->hasMany(Hopdonggiangday::className(), ['HDGD_TKB_BPCGD__id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getThoikhoabieus()
    {
        return $this->hasMany(Thoikhoabieu::className(), ['HDGD_TKB_BPCGD__id' => 'id']);
    }

    public function beforeSave($insert)
    {
        $this->loaitailieu_id = 3;
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
}
